-----------------------------------------------Async Await--------------------------------------------------------------------------------------------

JavaScript is Synchronous in nature which means that it has an event loop that allows you to queue up an action that won’t take place until the loop is available sometime after the code that queued the action has finished executing. But there are a lot of functionalities in our program which make our code Asynchronous and one of them is the Async/Await functionality.
Async/Await is the extension of promises which we get as support in the language. 

What is Async Function ?
Async simply allows us to write promises-based code as if it was synchronous and it checks that we are not breaking the execution thread. It operates asynchronously via the event loop. Async functions will always return a value. It makes sure that a promise is returned and if it is not returned then JavaScript automatically wraps it in a promise which is resolved with its value.

Example 1: In this example, we will see the basic use of async in JavaScript.


const getData = async () => {
    let data = "Hello World";
    return data;
}
 
getData().then(data => console.log(data));
Output

Hello World

What is Await Function ?
Await function is used to wait for the promise. It could be used within the async block only. It makes the code wait until the promise returns a result. It only makes the async block wait.

Example 2: This example shows the basic use of the await keyword in JavaScript.


const getData = async () => {
    let y = await "Hello World";
    console.log(y);
}
 
console.log(1);
getData();
console.log(2);
Output
1
2
Hello World


Notice that the console prints 2 before the “Hello World”. This is due to the usage of the await keyword. 

//ASYNC AWAIT

function makeRequest(location){
    return new Promise((resolve,reject)=>{
        console.log(`Making request to ${location}`)
        if(location === `Google`)
        {
            resolve(`Google says Hi`)
        } else {
            reject(`We can only talk to Google`)
        }
    })
}

function processRequest(response){
    return new Promise((resolve,reject)=>{
        cnsole.log('Processing response')
        resolve(`Extra Information + ${response}`)
    })
}

// makeRequest('Facebook').then(response => {
//     console.log('Response Received')
//     return processRequest(response)
// }).then(processedResponse=>{
//     console.log(processedResponse)
// }).catch(err=>{
//     console.log(err)
// })

async function doWork(){
    try{
        const response = await makeRequest('Facebook')
        console.log('Response Received')
        const processedResponse = await processRequest(response)
        console.log(processedResponse)
    } catch(err){
        console.log(err)
    }
}
doWork()

//OUTPUT
// Making request to Facebook
// We can only talk to Google

----------------------------------------------------------------------------------------------------------------------------------------

async function showCountry(){
    try{
    console.log("If state is Karnataka : ");
    let val = await retAns("Karnataka");
    console.log(val);
    }
    catch(error){
        console.log(error);
    }
}

function retAns(val){
    return new Promise(function(resolve,reject){
        if(val === "Karnataka")
        resolve("Country is India.")
        else
        reject("No answer : ");
    });
}

showCountry();
