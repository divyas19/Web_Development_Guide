-----------------------------------------------call(),apply()&bind()--------------------------------------------------------------------------------------------

call, apply, and bind are methods available on JavaScript functions that allow you to manipulate the context (the this keyword) with which a function is invoked.

call: The call method invokes a function with a specified this value and arguments provided individually.

function sayHello() {
    console.log("Hello, " + this.name);
}

const person = { name: "John" };

sayHello.call(person); // Outputs: Hello, John



apply: The apply method is similar to call, but it accepts arguments as an array.

function sayHello(greeting) {
    console.log(greeting + ", " + this.name);
}

const person = { name: "John" };

sayHello.apply(person, ["Hola"]); // Outputs: Hola, John


bind: The bind method creates a new function that, when called, has its this keyword set to the provided value.

function sayHello() {
    console.log("Hello, " + this.name);
}

const person = { name: "John" };

const sayHelloToJohn = sayHello.bind(person);
sayHelloToJohn(); // Outputs: Hello, John

These methods are commonly used for borrowing methods from other objects, setting the this value explicitly, or creating new functions with a fixed this value.
